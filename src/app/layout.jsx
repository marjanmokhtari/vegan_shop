"use client"
import "./globals.css";
import { CiUser } from "react-icons/ci";
import { PiHeartStraightLight } from "react-icons/pi";
import { HiOutlineShoppingBag } from "react-icons/hi2";
import { TbH4, TbMenu } from "react-icons/tb";
import Hilogo from '../app/assets/img/h4-logo-x2.webp'
import Image from "next/image";
import Link from "next/link";
import { HiMenuAlt4 } from "react-icons/hi";
import localFont from 'next/font/local'
import useStore from "../app/store";
import { useState } from "react";
import { IoCloseOutline } from "react-icons/io5";




// export const metadata = {
//   title: "vegan chocolate",
//   description: "Generated by create next app",
//   icons: {
//     icon: [
//       {
//         media: '(prefers-color-scheme: light)',
//         url: '/logo.ico',
//         href: '/logo.ico',
//       },
//     ],
//   },
// };

const myFont = localFont({
  src: "./assets/font/Marcellus-Regular.ttf",
  display: "swap",
});

const font2 = localFont({
  src: "./assets/font/DancingScript-Regular.ttf",
  display: "swap",

})


export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <head>
        <link rel="icon" href="/logo.ico" sizes="any" />
      </head>
      <body className={myFont.className}>
        <MyHeader></MyHeader>
        {children}
      </body>
    </html>
  );
}


function MyHeader() {
  const [cart, AddToCart] = useStore((state) => [state.cart, state.AddToCart])
  console.log(cart);


  let totalprice
  function calculat_total(cart) {
    totalprice = 0
    for(let i=0;i<cart.length;i++) {
      totalprice+=cart[i].price
    }
    return(totalprice)
    
  }
  return (
    <header className=" w-full relative ">
      <section className=" w-full flex  justify-evenly px-10 py-8">
        <section className=" hidden lg:flex w-[40%]">
          <nav className=" w-full ">
            <ul className=" w-full flex text-[#d1b17b] uppercase text-sm *:mx-5">
              <li><Link href='/assets/loc'>home</Link></li>
              <li>pages</li>
              <li>shop</li>
              <li>blog</li>
              <li>gallery</li>

            </ul>
          </nav>
        </section>
        <section className=" w-full flex lg:justify-center justify-star  ">
          <figure>
            <Image className=" lg:w-[80px] w-[50px]" src={Hilogo}></Image>
          </figure>
        </section>
        <section className=" hidden lg:flex w-[40%]">
          <nav className=" w-full flex justify-end">
            <ul className=" w-full flex justify-end text-[#d1b17b] uppercase text-xl *:mx-5">
              <li><CiUser></CiUser></li>
              <li><PiHeartStraightLight></PiHeartStraightLight></li>
              <li className=" relative"><HiOutlineShoppingBag></HiOutlineShoppingBag>
                <ul className=" absolute w-[300px] h-[500px] bg-white overflow-y-scroll -right-2 top-10 *:my-4 p-4 ">
                  {cart.map((val) => {
                    return (
                      <li className=" flex *:w-1/3 justify-between ">
                        <figure>
                          <Image width={1000} height={1000} className=" w-[80px]" src={val.avatar} alt="" />
                        </figure>
                        <div className=" *:w-full flex flex-wrap  ">
                          <span className=" text-black text-sm ">{val.name}</span>
                          <span className=" text-gray-600 text-sm">${val.price}.00</span>
                        </div>
                        <span className=" text-black flex justify-end">
                          <IoCloseOutline></IoCloseOutline>
                        </span>
                      </li>
                    )
                  })}
                  <li>{calculat_total(cart)}</li>
                </ul>
              </li>
              <li><TbMenu></TbMenu></li>
            </ul>
          </nav>
        </section>
        <section className=" w-1/2 flex justify-end lg:hidden">
          <HiMenuAlt4 className=" text-4xl text-[#d1b17b]"></HiMenuAlt4>
        </section>
      </section>
    </header>
  )
}